name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: create resources folder if not exists
        run: mkdir -p src/main/resources

      - name: set up application.properties
        run: echo "${{ secrets.APPLICATION }}" > src/main/resources/application.properties

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-      

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/github-actions-demo .

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/github-actions-demo

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      - name: Docker pull
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/github-actions-demo

      - name: Stop and remove existing containers
        run: |
          CONTAINER_IDS=$(sudo docker ps -aq --filter "name=github-actions-demo")
          if [ -n "$CONTAINER_IDS" ]; then
            sudo docker stop $CONTAINER_IDS || true
            sudo docker rm -f $CONTAINER_IDS || true
          fi

      - name: Run new container
        run: sudo docker run --name github-actions-demo -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/github-actions-demo

      - name: Clean up old Docker images
        run: sudo docker system prune -f
